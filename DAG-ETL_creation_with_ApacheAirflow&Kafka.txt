# importing the libraries
from datetime import timedelta
# The DAG object; we'll need this to instantiate a DAG
from airflow.models import DAG
# Operators; we need this to write tasks!
from airflow.operators.bash_operator import BashOperator
# This makes scheduling easy
from airflow.utils.dates import days_ago

#defining DAG arguments

# can be overridenon a per-task basis during operator initialization
default_args = {
    'owner': 'amm',
    'start_date': days_ago(0),
    'email': ['amm@gmail.com'],
    'email_on_failure' : True,
    'email_on_retry' : True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# defining the DAG

with DAG(
    'ETL_toll_data',
    default_args=default_args,
    description='Apache Airflow Final Assignment',
    schedule_interval=timedelta(days=1),
) as dag:

# DEFINE THE TASKS

# define the first task
    unzip_data = BashOperator(
        task_id='unzip_data',
        bash_command='tar -zxvf /home/project/airflow/dags/tolldata.tgz',
        dag=dag,
    )

# define the second task
    extract_data_from_csv = BashOperator(
        task_id='extract_data_from_csv',
        bash_command='cut -d"," -f 1-4 /home/project/airflow/dags/vehicle-data.csv > /home/project/airflow/dags/csv_data.csv',
        dag=dag,
    )

# define the third task
    extract_data_from_tsv = BashOperator(
        task_id='extract_data_from_tsv',
        bash_command='cut -f5,6,7 /home/project/airflow/dags/tollplaza-data.tsv > /home/project/airflow/dags/tsv_data.csv',
        dag=dag,
    )

# define the fourth task
    extract_data_from_fixed_width  = BashOperator(
        task_id='extract_data_from_fixed_width',
        bash_command='cut -c 59-61,63-68 /home/project/airflow/dags/payment-data.txt > /home/project/airflow/dags/fixed_width_data.csv',
        dag=dag,
        )

# define the fifth task
    consolidate_data = BashOperator(
        task_id='consolidate_data',
        bash_command='paste /home/project/airflow/dags/csv_data.csv /home/project/airflow/dags/tsv_data.csv /home/project/airflow/dags/ fixed_width_data.csv  > /home/project/airflow/dags/extracted_data.csv',
        dag=dag,
    )

# define the sixth task
    Transform = BashOperator(
        task_id='Transform',
         bash_command='awk \'BEGIN{FS=","; OFS=","} {print $1,$2,$3,toupper($4),$5,$6,$7,$8,$9}\' /home/project/airflow/dags/extracted_data.csv > /home/project/airflow/dags/transformed_data.csv',
        #bash_command='cut -f4 /home/project/airflow/dags/extracted_data.csv | tr '[:lower]' '[:upper]' > /home/project/airflow/dags/transformed_data.csv',
        dag=dag,
    )
# task pipeline
unzip_data >> extract_data_from_csv >> extract_data_from_tsv >> extract_data_from_fixed_width >> consolidate_data >> Transform
